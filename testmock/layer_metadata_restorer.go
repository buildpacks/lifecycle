// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/lifecycle/layermetadata (interfaces: MetaRestorer)

// Package testmock is a generated GoMock package.
package testmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	buildpack "github.com/buildpacks/lifecycle/buildpack"
	layermetadata "github.com/buildpacks/lifecycle/layermetadata"
	platform "github.com/buildpacks/lifecycle/platform"
)

// MockMetaRestorer is a mock of MetaRestorer interface.
type MockMetaRestorer struct {
	ctrl     *gomock.Controller
	recorder *MockMetaRestorerMockRecorder
}

// MockMetaRestorerMockRecorder is the mock recorder for MockMetaRestorer.
type MockMetaRestorerMockRecorder struct {
	mock *MockMetaRestorer
}

// NewMockMetaRestorer creates a new mock instance.
func NewMockMetaRestorer(ctrl *gomock.Controller) *MockMetaRestorer {
	mock := &MockMetaRestorer{ctrl: ctrl}
	mock.recorder = &MockMetaRestorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetaRestorer) EXPECT() *MockMetaRestorerMockRecorder {
	return m.recorder
}

// Restore mocks base method.
func (m *MockMetaRestorer) Restore(arg0 []buildpack.GroupBuildpack, arg1 platform.LayersMetadata, arg2 platform.CacheMetadata, arg3 layermetadata.LayerSHAStore) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Restore", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Restore indicates an expected call of Restore.
func (mr *MockMetaRestorerMockRecorder) Restore(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Restore", reflect.TypeOf((*MockMetaRestorer)(nil).Restore), arg0, arg1, arg2, arg3)
}
